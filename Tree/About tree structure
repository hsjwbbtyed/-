
在这个部分讨论树型结构，包括下面几个几种形态

最基本的二叉搜索树

以平衡性能为线索衍生出AVL树，伸展树。

为了解决高速I／O问题的B-树：因为不同存储设备之间访问速度的巨大差异，比如内存和磁盘的单次访问延迟相差5，6个数量级，我们要尽量减少对外存的访问，这是B-树的初衷。

我们的最后一站是红黑树：为了减少频繁的重平衡操作导致的全树拓扑结构发生剧烈变化而作出改进，通过染色使得平衡过程中仅涉及常数个节点。
